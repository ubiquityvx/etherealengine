{
  "name": "etherealengine",
  "description": "Engine, Server & Devops powering Ethereal Engine. Please support at https://opencollective.com/etherealengine",
  "version": "0.0.0",
  "homepage": "etherealengine.org",
  "private": true,
  "bin": {
    "etherealengine": "npx/cli.js"
  },
  "workspaces": [
    "packages/*",
    "packages/projects/projects/*"
  ],
  "keywords": [
    "three",
    "three.js",
    "ecs",
    "webgl",
    "mmo",
    "game engine",
    "webrtc",
    "productivity",
    "xr",
    "vr"
  ],
  "author": {
    "name": "Ethereal Engine",
    "email": "info@etherealengine.org"
  },
  "entrypoint": {},
  "contributors": [],
  "bugs": {},
  "directories": {
    "lib": "packages/server-core/src/user",
    "config": "config/"
  },
  "engines": {
    "node": ">= 18.12.0"
  },
  "npmClient": "npm",
  "scripts": {
    "build-client": "cd packages/client && npm run build",
    "check": "npm run lint && npm run check-errors && npm run check-eslint && npm run test && npm run build-client",
    "check-errors": "tsc --noemit && lerna run --scope '@etherealengine/*' check-errors && lerna run --ignore '@etherealengine/*' check-errors",
    "check-eslint": "eslint --quiet .",
    "checkout-dev": "lerna exec 'git checkout dev' --parallel",
    "clean-node-modules": "npx rimraf node_modules && npx rimraf package-lock.json && npx lerna exec npx rimraf node_modules && npx lerna exec npx rimraf package-lock.json",
    "coverage": "nyc npm run test",
    "create-root-package-json": "cross-env ts-node --swc scripts/create-root-package-json",
    "create-project": "cross-env ts-node --swc scripts/create-project",
    "depcheck": "lerna exec --no-bail --stream -- depcheck",
    "dev": "npm run dev-docker && concurrently -n agones,server,client,taskserver -c '#CEB793,#FF9800,#7E2D40,#B2B4B2' npm:dev-agones-silent npm:dev-server npm:dev-client npm:dev-taskserver",
    "dev-noclient": "npm run dev-docker && concurrently -n agones,server,taskserver npm:dev-agones-silent npm:dev-server npm:dev-taskserver",
    "dev-agones": "cd scripts && ./start-agones.sh",
    "dev-agones-silent": "npm run dev-agones &> /dev/null",
    "dev-client": "cd packages/client && npm run dev",
    "dev-taskserver": "cd packages/taskserver && npm run dev",
    "dev-docker": "cd scripts && ./start-containers.sh",
    "dev-docker-windows": "cd scripts && docker-compose up -d && docker-compose up -d -f docker-compose-minio.yml",
    "dev-tabs": "npm run dev-docker && cd scripts && ./dev-tabs.sh",
    "fetch-projects": "lerna exec 'git fetch -p && git rebase' --parallel --ignore @etherealengine/* --no-bail",
    "dev-reinit": "npm run dev-docker && cd packages/server && npm run dev-reinit-db && cd ../../scripts && ./generate-certs.sh",
    "dev-server": "cd packages/server && npm run dev",
    "dev-windows": "npm run dev-docker-windows && concurrently -n agones,server,client npm:dev-agones-silent npm:dev-server npm:dev-client",
    "diff": "lerna diff",
    "format": "prettier --write \"packages/**/*.{ts,tsx}\" \"scripts/*.ts\"",
    "format-scss": "stylelint \"packages/**/*.scss\" --fix",
    "format-staged": "lint-staged",
    "init-db-production": "cross-env APP_ENV=production FORCE_DB_REFRESH=true EXIT_ON_DB_INIT=true ts-node --swc packages/server/src/index.ts",
    "install-manifest": "cross-env ts-node --swc scripts/install-manifest.ts",
    "lint": "prettier --check \"packages/**/*.{ts,tsx}\"",
    "local": "npm run dev-docker && cross-env VITE_LOCAL_BUILD=true LOCAL=true concurrently -n agones,server,worldserver,mediaserver,client npm:dev-agones-silent \"cd packages/server && npm run start\" \"cd packages/instanceserver && npm run start\" \"cd packages/instanceserver && npm run start-channel\" \"cd packages/client && npm run local\"",
    "make-user-admin": "cross-env ts-node --swc scripts/make-user-admin.ts",
    "migrate": "cd packages/server-core && npm run migrate",
    "migrate:rollback": "cd packages/server-core && npm run migrate:rollback",
    "migrate:unlock": "cd packages/server-core && npm run migrate:unlock",
    "postinstall": "patch-package --exclude ./node_modules/@mui/",
    "precommit": "no-master-commits -b master",
    "prepare-database": "cross-env APP_ENV=production PREPARE_DATABASE=true EXIT_ON_DB_INIT=true ts-node --swc packages/server/src/index.ts",
    "publish": "lerna publish from-package --yes --registry https://registry.npmjs.org",
    "publish-npm": "lerna publish from-package --yes --no-verify-access --ignore-scripts --registry https://registry.npmjs.org",
    "publish-github": "lerna publish from-package --yes --no-verify-access --ignore-scripts --registry https://npm.pkg.github.com",
    "test": "cross-env TEST=true lerna run --scope '@etherealengine/*' --ignore '@etherealengine/server-core' test && lerna run --scope '@etherealengine/server-core' test && lerna run --ignore '@etherealengine/*' test",
    "test-e2e": "ts-node --swc scripts/run_e2e_tests.ts",
    "test:ci": "cpy --no-overwrite --rename=.env.local '.env.local.default' . && cross-env CI=true npm run test",
    "validate": "npm run lint && lerna run validate",
    "version-increment": "lerna version --conventional-commits --yes",
    "version-increment-no-tag": "lerna version --conventional-commits --yes --no-git-tag-version",
    "create-build-status": "cross-env ts-node --swc scripts/create-build-status.ts",
    "record-build-error": "cross-env ts-node --swc scripts/record-build-error.ts",
    "record-build-success": "cross-env ts-node --swc scripts/record-build-success",
    "add-license-headers": "cross-env ts-node --swc scripts/add-license-headers.ts"
  },
  "types": "lib/",
  "pre-commit": [
    "add-license-headers",
    "format-staged"
  ],
  "lint-staged": {
    "*.{ts,tsx}": [
      "prettier --write"
    ],
    "*.scss": [
      "stylelint --fix"
    ]
  },
  "devDependencies": {
    "@ianvs/prettier-plugin-sort-imports": "4.1.0",
    "@swc/core": "1.3.41",
    "@types/app-root-path": "1.2.4",
    "@types/cli": "0.11.21",
    "@types/mocha": "10.0.1",
    "@types/primus": "^7.3.6",
    "@types/three": "0.158.0",
    "@typescript-eslint/eslint-plugin": "5.56.0",
    "@typescript-eslint/parser": "5.56.0",
    "concurrently": "7.6.0",
    "deep-object-diff": "^1.1.9",
    "depcheck": "1.4.3",
    "eslint": "8.36.0",
    "jsdom": "^21.1.1",
    "kill-port": "2.0.1",
    "lerna": "6.5.1",
    "lint-staged": "13.2.0",
    "mocha": "10.2.0",
    "no-master-commits": "1.1.1",
    "nyc": "^15.1.0",
    "package-json-type": "1.0.3",
    "pre-commit": "1.2.2",
    "prettier": "3.0.2",
    "prettier-plugin-organize-imports": "^3.2.3",
    "prettier-plugin-tailwindcss": "^0.5.11",
    "react-dnd": "16.0.1",
    "react-router-dom": "6.9.0",
    "rimraf": "4.4.0",
    "stylelint": "^15.3.0",
    "stylelint-config-standard-scss": "^7.0.1",
    "stylelint-scss": "^4.5.0",
    "supertest": "6.3.3"
  },
  "dependencies": {
    "@aws-sdk/client-ecr": "^3.319.0",
    "@aws-sdk/client-s3": "^3.319.0",
    "@feathersjs/errors": "5.0.5",
    "@feathersjs/feathers": "5.0.5",
    "@feathersjs/schema": "5.0.5",
    "@feathersjs/typebox": "5.0.5",
    "app-root-path": "3.1.0",
    "cli": "1.0.1",
    "dotenv": "16.0.3",
    "fix-esm": "^1.0.1",
    "minio": "7.1.3",
    "patch-package": "^6.5.1",
    "react-icons": "^5.0.1",
    "three": "0.158.0",
    "ts-node": "10.9.1",
    "typescript": "5.0.2"
  }
}
