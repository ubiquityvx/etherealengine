ARG ECR_URL
ARG REPO_NAME
ARG STAGE
FROM ${ECR_URL}/${REPO_NAME}-root:latest_${STAGE} as builder

# Create app directory
WORKDIR /app

COPY package.json .
COPY packages/client/package.json ./packages/client/
COPY packages/client-core/package.json ./packages/client-core/
COPY packages/editor/package.json ./packages/editor/
COPY packages/hyperflux/package.json ./packages/hyperflux/
COPY packages/ui/package.json ./packages/ui/
COPY patches/ ./patches/

ARG NODE_ENV
RUN npm install --loglevel notice --legacy-peer-deps --production
# Hackfix for issue with broken installation of react-is
RUN npm install react-is

# copy then compile the code
COPY . .

ARG STAGE
ARG STORAGE_PROVIDER
ARG STORAGE_CLOUDFRONT_DOMAIN
ARG STORAGE_CLOUDFRONT_DISTIRBUTION_ID
ARG STORAGE_S3_STATIC_RESOURCE_BUCKET
ARG STORAGE_AWS_ACCESS_KEY_ID
ARG STORAGE_AWS_ACCESS_KEY_SECRET
ARG STORAGE_S3_REGION
ARG STORAGE_S3_AVATAR_DIRECTORY
ARG SERVE_CLIENT_FROM_STORAGE_PROVIDER
ARG MYSQL_HOST
ARG MYSQL_USER
ARG MYSQL_PORT
ARG MYSQL_PASSWORD
ARG MYSQL_DATABASE
ARG VITE_APP_HOST
ARG VITE_APP_PORT
ARG VITE_PWA_ENABLED
ARG VITE_SERVER_HOST
ARG VITE_SERVER_PORT
ARG VITE_FILE_SERVER
ARG VITE_MEDIATOR_SERVER
ARG VITE_LOGIN_WITH_WALLET
ARG VITE_8TH_WALL
ARG VITE_INSTANCESERVER_HOST
ARG VITE_INSTANCESERVER_PORT
ARG VITE_LOCAL_BUILD
ARG VITE_SOURCEMAPS
ARG VITE_READY_PLAYER_ME_URL
ARG VITE_DISABLE_LOG
ARG VITE_AVATURN_URL
ARG VITE_AVATURN_API
ARG AUTH_SECRET
ENV AUTH_SECRET=$AUTH_SECRET
ENV STORAGE_CLOUDFRONT_DOMAIN=$STORAGE_CLOUDFRONT_DOMAIN
ENV STORAGE_CLOUDFRONT_DISTRIBUTION_ID=$STORAGE_CLOUDFRONT_DISTRIBUTION_ID
ENV MYSQL_HOST=$MYSQL_HOST
ENV MYSQL_PORT=$MYSQL_PORT
ENV MYSQL_PASSWORD=$MYSQL_PASSWORD
ENV MYSQL_DATABASE=$MYSQL_DATABASE
ENV MYSQL_USER=$MYSQL_USER
ENV VITE_APP_HOST=$VITE_APP_HOST
ENV VITE_APP_PORT=$VITE_APP_PORT
ENV VITE_PWA_ENABLED=$VITE_PWA_ENABLED
ENV VITE_SERVER_HOST=$VITE_SERVER_HOST
ENV VITE_FILE_SERVER=$VITE_FILE_SERVER
ENV VITE_SERVER_PORT=$VITE_SERVER_PORT
ENV VITE_MEDIATOR_SERVER=$VITE_MEDIATOR_SERVER
ENV VITE_LOGIN_WITH_WALLET=$VITE_LOGIN_WITH_WALLET
ENV VITE_8TH_WALL=$VITE_8TH_WALL
ENV VITE_INSTANCESERVER_HOST=$VITE_INSTANCESERVER_HOST
ENV VITE_INSTANCESERVER_PORT=$VITE_INSTANCESERVER_PORT
ENV VITE_LOCAL_BUILD=$VITE_LOCAL_BUILD
ENV VITE_SOURCEMAPS=$VITE_SOURCEMAPS
ENV VITE_READY_PLAYER_ME_URL=$VITE_READY_PLAYER_ME_URL
ENV VITE_DISABLE_LOG=$VITE_DISABLE_LOG
ENV VITE_AVATURN_URL=$VITE_AVATURN_URL
ENV VITE_AVATURN_API=$VITE_AVATURN_API

RUN npm run build-client

RUN rm -r packages/client/public

ENV APP_ENV=production

FROM node:18-buster-slim as runner
WORKDIR /app

COPY --from=builder /app/packages/client ./packages/client
COPY --from=builder /app/scripts ./scripts

RUN npm install app-root-path koa koa-body koa-qs koa-static
CMD ["scripts/start-server.sh"]
