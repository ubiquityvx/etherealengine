{
  "components": {
    "location": {
      "lbl-name": "Name",
      "lbl-maxuser": "Max Users",
      "lbl-scene": "Scene",
      "lbl-ve": "Video Enabled",
      "lbl-gme": "Global Media Enabled",
      "lbl-lobby": "Make Lobby",
      "lbl-featured": "Featured",
      "lbl-ae": "Audio Enabled",
      "lbl-se": "Screen Sharing Enabled",
      "lbl-fe": "Face Streaming Enabled",
      "createLocation": "Create Location",
      "type": "Type",
      "sceneCantEmpty": "Scene can't be empty",
      "maxUserCantEmpty": "Max users can't be empty",
      "nameCantEmpty": "Name can't be empty",
      "typeCantEmpty": "Type can't be empty",
      "nameRequired": "Name is required",
      "maxUsersRequired": "Max users is required",
      "sceneRequired": "Scene is required",
      "typeRequired": "Type is required",
      "confirmLocationDelete": "Do you want to delete location",
      "lobby": "Lobby",
      "featured": "Featured"
    },
    "bot": {
      "uniqueCommand": "Command should be unique",
      "commandRequired": "Fill in command is required",
      "nameCantEmpty": "Name can't be empty",
      "descriptionCantEmpty": "Description can't be empty",
      "locationCantEmpty": "Location can't be empty",
      "createNewBot": "Create new bot",
      "addMoreBots": "Add more bots in the system.",
      "location": "Location",
      "instance": "Instance",
      "addCommand": "Add command",
      "addMoreCommand": "Add more command",
      "command": "Command",
      "enterCommand": "Enter command here",
      "description": "Description",
      "enterDescription": "Enter description here",
      "spawnBot": "Spawn Bot",
      "lastRunStatus": "Last run status",
      "autoRefreshing": "auto refreshing in 10s",
      "engineBots": "Ethereal Engine bots",
      "updateBot": "UPDATE BOT",
      "name": "Name",
      "confirmBotDelete": "Do you want to delete bot"
    },
    "common": {
      "cancel": "Cancel",
      "close": "Close",
      "edit": "Edit",
      "submit": "Submit",
      "save": "Save",
      "confirm": "Confirm",
      "none": "None",
      "update": "Update",
      "remove": "Remove",
      "reset": "Reset",
      "delete": "Delete",
      "view": "View",
      "kick": "Kick",
      "ban": "Ban",
      "yes": "Yes",
      "no": "No",
      "refresh": "Refresh",
      "fillRequiredFields": "Please fill all required field",
      "fixErrorFields": "Please fix all errors"
    },
    "analytics": {
      "loading": "Loading analytics...",
      "activeParties": "Active Parties",
      "activeLocations": "Active Locations",
      "activeInstances": "Active Instances",
      "activeScenes": "Active Scenes",
      "instanceUsers": "Instance Users",
      "channelUsers": "Channel Users",
      "dailyUsers": "Daily Users",
      "dailyNewUsers": "Daily New Users",
      "usersToday": "Users Today",
      "newUsersToday": "New Users Today",
      "activity": "Activity",
      "users": "Users"
    },
    "group": {
      "createGroup": "Create Group",
      "name": "Name",
      "description": "Description",
      "nameCantEmpty": "Name can't be empty",
      "descriptionCantEmpty": "Description can't be empty",
      "scopeTypeCantEmpty": "Scope can't be empty",
      "nameRequired": "Name is required",
      "descriptionRequired": "Description is required",
      "scopeTypeRequired": "Scope is required",
      "grantScope": "Grant Scope",
      "groupUsers": "Group Users",
      "confirmGroupDelete": "Do you want to delete group",
      "selectAllScopes": "Select All Scopes",
      "clearAllScopes": "Clear All Scopes"
    },
    "invite": {
      "sendInvite": "Send Invite",
      "receivedInvite": "Received Invite",
      "confirmInviteDelete": "Do you want to delete invite",
      "confirmMultiInviteDelete": "Do you want to delete all of the selected invites?",
      "create": "Create new invite(s)",
      "singleTargetLabel": "Invite recipient",
      "targetLabel": "Invite recipients",
      "target": "Enter a comma-separated list of invite codes and/or emails/SMSes",
      "singleTarget": "Enter an invite code or email/SMS",
      "friend": "User invite code",
      "group": "Group ID",
      "party": "Party ID",
      "submit": "Send Invite(s)",
      "update": "Update Invite",
      "location": "Location",
      "instance": "Instance",
      "user": "User",
      "spawnPoint": "Spawn Point",
      "deleteSelected": "Delete selected invites"
    },
    "channel": {
      "instanceRequired": "Instance is required",
      "instanceCantEmpty": "Instance can't be empty",
      "instance": "Instance",
      "createOne": "Create One",
      "createChannel": "Create Channel",
      "confirmChannelDelete": "Do you want to delete channel?",
      "name": "Channel Name"
    },
    "project": {
      "addProject": "Add Project",
      "updateProject": "Update Project",
      "downloadProject": "Download Project",
      "rebuild": "Rebuild",
      "rebuilding": "Rebuilding",
      "updateEngine": "Update Engine",
      "updateSelector": "Update projects",
      "projectWarning": "WARNING: Updating projects along with the Engine version may result in loss of work. If you revert to an old engine project and update projects with it, your copy of these projects will also be reverted. It is recommended that you back up the destination branch of these projects if you have made modifications that might be lost.",
      "updateAndRebuild": "Update Engine/Rebuild",
      "checking": "Checking Rebuild",
      "project": "Project",
      "githubUrl": "Github URL",
      "urlRequired": "URL is required",
      "urlCantEmpty": "URL can't be empty",
      "updateGithubRepoLink": "Update GitHub Repo Link",
      "setGithubRepoLink": "Set GitHub Repo Link",
      "githubRepoUrl": "GitHub Repo URL",
      "publicUrl": "Public URL",
      "processing": "Processing",
      "confirmProjectsRebuild": "Do you want to rebuild projects?",
      "confirmProjectRebuild": "Do you want to rebuild project",
      "confirmProjectResetMain1": "Do you want to reset the project",
      "confirmProjectResetMain2": "to the main branch in the linked GitHub repository? Your branch, ",
      "confirmProjectResetMain3": "will be forcibly overridden by the contents of the main branch.",
      "confirmProjectInvalidate": "Do you want to invalidate storage provider's cache of",
      "confirmProjectDelete": "Do you want to delete project",
      "confirmPushProjectToGithub": "Do you want to push this project to its associated GitHub repository",
      "outdatedBuild": "This project has been updated locally since the last build",
      "userAccess": "User Access",
      "userInviteCode": "User Invite Code",
      "inviteCodeCantEmpty": "Invite code can't be empty",
      "inviteCodeRequired": "Invite code is required",
      "source": "Source Repo",
      "sourceType": "Source type",
      "destination": "Destination Repo",
      "destinationType": "Destination type",
      "destinationProcessing": "Checking that you have access to destination repo",
      "sourceVsDestinationProcessing": "Checking that source and destination are the same project, or destination is empty",
      "files": "Files",
      "branchData": "Source branch",
      "commitData": "Commit",
      "branchProcessing": "Fetching branches of project",
      "commitsProcessing": "Fetching commits of project",
      "mismatchedProjectWarning": "This version of this project does not match the installed version of Ethereal Engine. There may be compilation or runtime errors if this project is installed.",
      "needsGithubProvider": "You must connect your account with GitHub in order to add or update projects from GitHub",
      "sourceProjectName": "Project in source repo",
      "destinationProjectName": "Project in destination repo",
      "destinationRepoEmpty": "The destination repo is empty",
      "destinationURLValid": "Destination URL valid and accessible?",
      "sourceURLValid": "Source URL valid and accessible?",
      "sourceMatchesDestination": "Source Project matches destination, or destination empty?",
      "changeDestination": "Change Destination Repo",
      "copyDestination": "Copy Destination",
      "autoUpdate": "Auto Update",
      "enableAutoUpdate": "Enable Auto Update",
      "autoUpdateMode": "Auto Update Mode",
      "dev": "Dev",
      "devTooltip": "In dev mode, the project is updated whenever a new commit is pushed to source branch of source repo",
      "prod": "Prod",
      "prodTooltip": "In prod mode, the project is updated whenever a tag release is pushed in source repo",
      "autoUpdateInterval": "Auto Update Interval",
      "minute": "minute",
      "minutes": "minutes",
      "hour": "hour",
      "hours": "hours",
      "day": "day",
      "commitSHACopied": "Commit SHA copied",
      "buildStatus": "Build Status",
      "defaultProjectUpdateTooltip": "default-project is updated when engine is updated",
      "refreshGithubRepoAccess": "Refresh GitHub Repo Access",
      "refreshingGithubRepoAccess": "Refreshing"
    },
    "instance": {
      "confirmInstanceDelete": "Do you want to delete instance",
      "location": "Location",
      "count": "Count",
      "kickDuration": "Kick Duration",
      "confirmUserBan": "Are you sure you want to ban this user?"
    },
    "resources": {
      "resources": "resources",
      "id": "Id",
      "key": "Key",
      "name": "Name",
      "mimeType": "Mime Type",
      "project": "Project",
      "resourceType": "Resource Type",
      "preview": "Preview",
      "confirmResourceDelete": "Do you want to delete resource",
      "nameCantEmpty": "Name can't be empty",
      "resourceTypeCantEmpty": "Resource type can't be empty",
      "resourceUrlCantEmpty": "Resource url can't be empty",
      "resourceFileCantEmpty": "Resource file can't be empty",
      "nameRequired": "Name is required",
      "resourceTypeRequired": "Resource type is required",
      "resourceUrlInvalid": "Resource url is not valid",
      "resourceFileOversized": "Resource file size must be between {{minSize}} MB and {{maxSize}} MB",
      "selectFile": "Select File",
      "resourceUrl": "Resource URL"
    },
    "setting": {
      "authentication": "Authentication",
      "service": "Service",
      "secret": "Secret",
      "entity": "Entity",
      "authStrategies": "Authentication Strategies",
      "userName": "User Name",
      "local": "Local",
      "oauth": "OAuth",
      "password": "Password",
      "defaults": "Defaults",
      "host": "Host",
      "protocol": "Protocol",
      "discord": "Discord",
      "facebook": "Facebook",
      "google": "Google",
      "github": "Github",
      "linkedIn": "LinkedIn",
      "twitter": "Twitter",
      "key": "Key",
      "callback": "Callback",
      "appTitle": "App Title",
      "appSubtitle": "App Subtitle",
      "appDescription": "App Description",
      "appBackground": "App Background",
      "appSocialLinks": "Social Links",
      "icon": "Icon",
      "link": "Link",
      "resetTheme": "Reset to Default",
      "aws": "AWS",
      "keys": "Keys",
      "accessKeyId": "Access Key ID",
      "secretAccessKey": "Secret Access Key",
      "eks": "EKS",
      "hostedZoneId": "Hosted Zone ID",
      "s3": "S3",
      "endpoint": "Endpoint",
      "staticResourceBucket": "Static Resource Bucket",
      "region": "Region",
      "avatarDir": "AvatarDir",
      "s3DevMode": "S3DevMode",
      "domain": "Domain",
      "distributionId": "Distribution ID",
      "cloudFront": "Cloud Front",
      "sms": "SMS",
      "applicationId": "Application ID",
      "senderId": "Sender ID",
      "apiKey": "ApiKey",
      "url": "URL",
      "chargebee": "Chargebee",
      "client": "Client",
      "clientId": "OAuth2 client_id",
      "clientSecret": "OAuth2 client_secret",
      "coil": "Coil",
      "coilPaymentPointer": "Payment Pointer",
      "title": "Title",
      "description": "Description",
      "logo": "Logo",
      "appleTouchIcon": "Apple Touch Icon",
      "icon192px": "Icon 192px",
      "icon512px": "Icon 512px",
      "favIcon16px": "FavIcon 16px",
      "favIcon32px": "FavIcon 32px",
      "webmanifestLink": "Webmanifest",
      "swScriptLink": "service-worker.js",
      "releaseName": "Release Name",
      "email": "Email",
      "smtp": "SMTP",
      "port": "Port",
      "secure": "Secure",
      "auth": "Auth",
      "from": "From",
      "subject": "Subject",
      "login": "login",
      "friend": "friend",
      "group": "group",
      "party": "Party",
      "smsNameCharLimit": "SMS Name Character Limit",
      "instanceServer": "Instance Server",
      "clientHost": "Client Host",
      "rtcStartPort": "RTC Start Port",
      "rtcEndPort": "RTC End Port",
      "rtcPortBlockSize": "RTC Block Size",
      "identifierDigits": "Identifier Digits",
      "mode": "Mode",
      "locationName": "Location Name",
      "settings": "Settings",
      "redis": "Redis",
      "enabled": "Enabled",
      "address": "Address",
      "server": "Server",
      "hostName": "Host Name",
      "rootDirectory": "Root Directory",
      "publicDirectory": "Public Directory",
      "nodeModulesDirectory": "Node Modules Directory",
      "localStorageProvider": "Local Storage Provider",
      "performDryRun": "Perform Dry Run",
      "storageProvider": "Storage Provider",
      "googleAnalyticsTrackingId": "Google Analytics Tracking ID",
      "certPath": "CertPath",
      "keyPath": "KeyPath",
      "githubWebhookSecret": "Github Webhook Secret",
      "githubPrivateKey": "Github Private Key",
      "instanceserverUnreachableTimeoutSeconds": "Seconds for instanceserver to be considered unreachable",
      "project": "Project",
      "patchInstanceserver": "Patch Instanceserver",
      "hub": "Hub",
      "placeholderText": "This is the input placeholder",
      "addSocialLink": "Add Social Link",
      "themePlayground": "Theme Playground",
      "defaultThemes": "Default Themes",
      "theme": "Theme",
      "editor": "Editor",
      "studio": "Studio",
      "admin": "Admin",
      "key8thWall": "8th Wall Key",
      "shortTitle": "PWA Short Title",
      "startPath": "PWA Start Path",
      "shortTitleTooltip": "The displayed title of a PWA-installed copy of this app if 'title' is too long; recommended max 12 characters",
      "startPathTooltip": "The path that a PWA-installed copy of this app will direct to",
      "authSettingsRefreshNotification": "Updating authentication settings requires restarting the API pods. This should be complete within a few minutes. Changes you just made may not be reflected until then.",
      "homepageLinkButtonEnabled": "Show link button on homepage",
      "homepageLinkButtonRedirect": "URL of homepage link button",
      "homepageLinkButtonText": "Text of homepage link button",
      "audioMaxBitrate": "User Audio max bitrate (kbps)",
      "videoCodec": "User video codec",
      "videoMaxResolution": "User webcam max resolution",
      "videoFHD": "1920x1080",
      "videoHD": "1280x720",
      "videoFWVGA": "854x480",
      "videoNHD": "640x360",
      "videoLowResMaxBitrate": "User low-res video max bitrate (kbps)",
      "videoMidResMaxBitrate": "User mid-res video max bitrate (kbps)",
      "videoHighResMaxBitrate": "User high-res video max bitrate (kbps)",
      "screenshareCodec": "Screenshare video codec",
      "screenshareLowResMaxBitrate": "Screenshare low-res video max bitrate (kbps)",
      "screenshareMidResMaxBitrate": "Screenshare mid-res video max bitrate (kbps)",
      "screenshareHighResMaxBitrate": "Screenshare high-res video max bitrate (kbps)",
      "privacyPolicy": "Privacy Policy",
      "taskServer": {
        "taskServer": "Task Server",
        "port": "Port",
        "processInterval": "Process Interval"
      },
      "helm": {
        "header": "Helm Chart Versions",
        "main": "Main deployment Helm version",
        "builder": "Builder deployment Helm version",
        "explainer": "To apply a new Helm chart version, Save here, then go to /admin/projects and then Rebuild",
        "builderHelmToDeploy": "Builder Helm chart to deploy",
        "mainHelmToDeploy": "Main Helm chart to deploy"
      }
    },
    "avatar": {
      "source": "Source",
      "file": "File",
      "url": "Url",
      "avatarPreview": "Avatar Preview",
      "thumbnailPreview": "Thumbnail Preview",
      "avatarUrl": "Avatar URL",
      "thumbnailUrl": "Thumbnail URL",
      "selectAvatar": "Select Avatar",
      "selectThumbnail": "Select Thumbnail",
      "saveThumbnail": "Generate Thumbnail",
      "saveThumbnailTooltip": "Generate thumbnail from avatar preview",
      "nameCantEmpty": "Name can't be empty",
      "avatarUrlCantEmpty": "Avatar url can't be empty",
      "thumbnailUrlCantEmpty": "Thumbnail url can't be empty",
      "avatarFileCantEmpty": "Avatar file can't be empty",
      "thumbnailFileCantEmpty": "Thumbnail file can't be empty",
      "nameRequired": "Name is required",
      "avatarUrlInvalid": "Avatar url is not valid",
      "thumbnailUrlInvalid": "Thumbnail url is not valid",
      "avatarFileOversized": "Avatar file size must be between {{minSize}} MB and {{maxSize}} MB",
      "thumbnailFileOversized": "Thumbnail file size must be between {{minSize}} MB and {{maxSize}} MB",
      "zoom": "Zoom",
      "leftClick": "Left Click",
      "rightClick": "Right Click",
      "scroll": "Scroll",
      "loading": "Loading",
      "confirmAvatarDelete": "Do you want to delete avatar",
      "confirmMultiDelete": "Do you want to delete all of the selected avatars?",
      "deleteSelected": "Delete selected avatars",
      "confirmThumbnailReplace": "Do you want to replace previously selected avatar thumbnail with current avatar preview?"
    },
    "user": {
      "nameCantEmpty": "Name can't be empty",
      "avatarCantEmpty": "Avatar can't be empty",
      "scopeTypeCantEmpty": "Scope type can't be empty",
      "createUser": "Create User",
      "nameRequired": "Name is required",
      "avatarRequired": "Avatar is required",
      "scopeTypeRequired": "Scope type is required",
      "hideGuests": "Hide guests",
      "id": "Id",
      "name": "Name",
      "avatar": "Avatar",
      "grantScope": "Grant Scope",
      "location": "Location",
      "inviteCode": "Invite Code",
      "instance": "Instance",
      "confirmUserDelete": "Do you want to delete user",
      "isGuest": "Is guest",
      "selectAllScopes": "Select All Scopes",
      "clearAllScopes": "Clear All Scopes",
      "userSearch": "user by id, name or account identifier",
      "linkedAccounts": "Linked Accounts",
      "discord": "Discord",
      "facebook": "Facebook",
      "google": "Google",
      "github": "Github",
      "linkedIn": "LinkedIn",
      "twitter": "Twitter",
      "sms": "SMS",
      "email": "Email"
    },
    "server": {
      "loading": "Fetching Server Info",
      "loadingLogs": "Fetching Server Logs",
      "name": "Name",
      "status": "Status",
      "type": "Type",
      "users": "Users",
      "instance": "Instance",
      "restarts": "Restarts",
      "containers": "Containers",
      "container": "Container",
      "age": "Age",
      "logs": "Logs",
      "autoRefresh": "Auto Refresh",
      "none": "None",
      "seconds": "seconds",
      "minute": "minute",
      "minutes": "minutes",
      "download": "Download",
      "confirmPodDelete": "Do you want to delete pod"
    },
    "recording": {
      "recording": "Recording",
      "confirmRecordingDelete": "Do you want to delete recording",
      "recordingFiles": "Recordings Files for:"
    }
  }
}
